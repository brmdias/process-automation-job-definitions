[ {
  "defaultTab" : "nodes",
  "description" : "",
  "executionEnabled" : true,
  "group" : "Use Cases",
  "id" : "efb5850e-5de4-4ea0-86c7-d437621fce15",
  "loglevel" : "INFO",
  "name" : "Run a job multiple times",
  "nodeFilterEditable" : false,
  "nodefilters" : {
    "dispatch" : {
      "excludePrecedence" : true,
      "keepgoing" : false,
      "rankOrder" : "ascending",
      "successOnEmptyNodeFilter" : false,
      "threadcount" : "1"
    },
    "filter" : ".*rundeckers-a"
  },
  "nodesSelectedByDefault" : true,
  "options" : [ {
    "label" : "Nr of Executions",
    "name" : "nr-exec",
    "type" : "text",
    "value" : "5"
  } ],
  "plugins" : {
    "ExecutionLifecycle" : null
  },
  "scheduleEnabled" : true,
  "schedules" : [ ],
  "sequence" : {
    "commands" : [ {
      "autoSecureInput" : "false",
      "description" : "Create a dummy JSON array based on job option",
      "passSecureInput" : "false",
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "captureMultipleKeysValues" : "false",
            "hideOutput" : "false",
            "logData" : "true",
            "name" : "dummy-json",
            "regex" : "(.*)"
          },
          "type" : "key-value-data-multilines"
        } ]
      },
      "script" : "#!/bin/bash\n\n# Number of objects to generate\nnum_objects=@option.nr-exec@\n\n# Initialize the JSON array as a string\njson_array=\"[\"\n\n# Generate dummy data\nfor ((i=1; i<=$num_objects; i++))\ndo\n    # Add the object to the JSON array string\n    json_array+=$'\\n  {'\n    json_array+=$'\\n    \"ID\": '\"$i\"','\n    json_array+=$'\\n    \"Name\": \"job'\"$i\"'\"'\n    \n    # Add comma for all objects except the last one\n    if [ $i -lt $num_objects ]; then\n        json_array+=$'\\n  },'\n    else\n        json_array+=$'\\n  }'\n    fi\ndone\n\n# Close the JSON array\njson_array+=$'\\n]'\n\n# Print the JSON array\n# echo \"Generated JSON array:\"\necho \"$json_array\""
    }, {
      "configuration" : {
        "jsonDataContextArray" : "data.dummy-json",
        "printIterationData" : "true",
        "script" : "echo \"$vars.id\"\necho \"$vars.name\"",
        "stopIterationOnFailure" : "false"
      },
      "description" : "Run job multiple times",
      "nodeStep" : false,
      "type" : "iterate-json-command-plugin"
    } ],
    "keepgoing" : false,
    "strategy" : "node-first"
  },
  "uuid" : "efb5850e-5de4-4ea0-86c7-d437621fce15"
} ]
