[ {
  "defaultTab" : "nodes",
  "description" : "",
  "executionEnabled" : true,
  "group" : "Use Cases",
  "id" : "6305e1be-118a-4f7e-968d-01b81d318809",
  "loglevel" : "INFO",
  "name" : "Job Scheduler",
  "nodeFilterEditable" : false,
  "options" : [ {
    "label" : "Job ID",
    "name" : "job-id",
    "value" : "d99b4048-c65e-4904-a8eb-ade75ea97f0e"
  }, {
    "description" : "Rundeck user account to schedule the job",
    "label" : "User Account",
    "name" : "user-account"
  }, {
    "hidden" : true,
    "name" : "user-account-api-token",
    "secure" : true,
    "storagePath" : "keys/users/${option.user-account}/rba-api-token",
    "valueExposed" : true
  } ],
  "plugins" : {
    "ExecutionLifecycle" : { }
  },
  "runnerSelector" : {
    "runnerFilterMode" : "LOCAL",
    "runnerFilterType" : "LOCAL_RUNNER"
  },
  "scheduleEnabled" : true,
  "schedules" : [ ],
  "sequence" : {
    "commands" : [ {
      "fileExtension" : ".py",
      "interpreterArgsQuoted" : false,
      "script" : "import requests\n\n# Define the server, job UUID, and API token\nserver = 'bdias.pd-sandbox.com'\njobUUID = '@option.job-id@'\napi_token = '@option.user-account-api-token@'\n\n# Step 1: Perform the GET request to fetch the JSON response\nget_url = f'https://{server}/api/48/project/dev/jobs/export?format=json&idlist={jobUUID}'\nget_headers = {\n    'Accept': 'application/json',\n    'X-Rundeck-Auth-Token': api_token\n}\n\nresponse = requests.get(get_url, headers=get_headers)\n\n# Check if the GET request was successful\nif response.status_code == 200:\n    json_response = response.json()  # Save the JSON response as a variable\n    print(\"GET request successful. JSON response saved.\")\nelse:\n    print(f\"GET request failed with status code {response.status_code}\")\n    print(response.text)\n    exit(1)\n\n# Step 2: Use the saved JSON response as the payload in a POST request\npost_url = f'https://{server}/api/48/project/dev/jobs/import?fileformat=json&dupeOption=update'\npost_headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'X-Rundeck-Auth-Token': api_token\n}\n\n# Perform the POST request\npost_response = requests.post(post_url, json=json_response, headers=post_headers)\n\n# Check if the POST request was successful\nif post_response.status_code == 200:\n    print(\"POST request successful.\")\n    print(post_response.json())  # Print the response from the server\nelse:\n    print(f\"POST request failed with status code {post_response.status_code}\")\n    print(post_response.text)",
      "scriptInterpreter" : "python"
    } ],
    "keepgoing" : false,
    "strategy" : "node-first"
  },
  "uuid" : "6305e1be-118a-4f7e-968d-01b81d318809"
} ]
