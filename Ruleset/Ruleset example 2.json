[ {
  "defaultTab" : "nodes",
  "description" : "This is an example when Ruleset is used as Workflow Strategy - with Error Handler and Script File.\nThis will include:\n - 1 step in parallel of the remaining workflow\n - 1 job reference step (just running another script)\n - 1 local script step running a script saved in the node\n - 1 error handler to use the previous step state as a condition\n - 2 steps running based in the step state from the previous step. These steps are also reading a Global Variable value.\n - 1 step halting the execution in case of an error. This step also runs based in a job option value.\n - 1 final step to wrap-up the workflow (which only runs after specific steps)",
  "executionEnabled" : true,
  "group" : "Ruleset",
  "id" : "10c57ba1-721a-46bf-a4d8-d363db4a1468",
  "loglevel" : "INFO",
  "name" : "Ruleset example 2",
  "nodeFilterEditable" : false,
  "options" : [ {
    "label" : "File Path",
    "name" : "filepath",
    "value" : "/opt/apps/runner/test-script.sh"
  }, {
    "enforced" : true,
    "label" : "Mode",
    "name" : "mode",
    "value" : "KeepGoing",
    "values" : [ "HaltExecution", "KeepGoing" ],
    "valuesListDelimiter" : ","
  }, {
    "enforced" : true,
    "label" : "Step 3 result",
    "name" : "step-3-result",
    "value" : "0",
    "values" : [ "0", "1" ],
    "valuesListDelimiter" : ","
  } ],
  "plugins" : {
    "ExecutionLifecycle" : { }
  },
  "runnerSelector" : {
    "filter" : "LINUX",
    "runnerFilterMode" : "TAGS",
    "runnerFilterType" : "TAG_FILTER_AND"
  },
  "scheduleEnabled" : true,
  "schedules" : [ ],
  "sequence" : {
    "commands" : [ {
      "description" : "Step 1 - Parallel Execution",
      "script" : "echo \"Starting step #1\"\n\nsleep 20s\n\necho \"Completing step #1\""
    }, {
      "description" : "Step 2 - Prerequisite (Job Ref)",
      "jobref" : {
        "args" : "-filepath ${option.filepath}",
        "failOnDisable" : true,
        "group" : "Ruleset",
        "name" : "Referenced job",
        "uuid" : "0ad8669a-2dc4-4e9b-8797-12b03887438f"
      }
    }, {
      "args" : "${option.step-3-result}",
      "description" : "Run script file",
      "errorhandler" : {
        "configuration" : {
          "export" : "step-result",
          "group" : "export",
          "value" : "NOK"
        },
        "keepgoingOnSuccess" : true,
        "nodeStep" : false,
        "type" : "export-var"
      },
      "scriptfile" : "${option.filepath}"
    }, {
      "description" : "OK",
      "script" : "echo \"Step #4 - OK case\"\necho \"Step 3 via logfilter: @export.step-result@\"\n\nexit 0"
    }, {
      "description" : "NOK",
      "script" : "echo \"Step #4 - Not OK case\"\necho \"Step 3 result via logfilter: @export.step-result@\"\n\nexit 0"
    }, {
      "configuration" : {
        "debugOnly" : "false"
      },
      "description" : "Final step - wrap up",
      "nodeStep" : false,
      "type" : "log-data-step"
    }, {
      "configuration" : {
        "fail" : "true",
        "halt" : "true"
      },
      "description" : "Halt execution",
      "nodeStep" : false,
      "type" : "flow-control"
    } ],
    "keepgoing" : false,
    "pluginConfig" : {
      "WorkflowStrategy" : {
        "ruleset" : {
          "rules" : "# Autogenerated Directives\n[1] run-at-start\n[2] run-at-start\n[3] run-after:2\n[4] run-after:3\n[5] run-after:3\n[6] run-after:1,4,7\n[7] run-after:5\n[7] run-after:5 if:export.step-result==NOK if:option.mode==HaltExecution\n\n# Autogenerated Conditions\n[4] if:export.step-result!=NOK\n[5] if:export.step-result==NOK"
        }
      }
    },
    "strategy" : "ruleset"
  },
  "tags" : "ruleset",
  "uuid" : "10c57ba1-721a-46bf-a4d8-d363db4a1468"
} ]
