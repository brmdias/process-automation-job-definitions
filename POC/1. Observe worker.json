[ {
  "defaultTab" : "nodes",
  "description" : "",
  "executionEnabled" : true,
  "group" : "POC",
  "id" : "e5e8f2b6-d560-46f0-b0ff-6ae26b049a13",
  "loglevel" : "INFO",
  "maxMultipleExecutions" : "10",
  "multipleExecutions" : true,
  "name" : "1. Observe worker",
  "nodeFilterEditable" : false,
  "nodefilters" : {
    "dispatch" : {
      "excludePrecedence" : true,
      "keepgoing" : false,
      "rankOrder" : "ascending",
      "successOnEmptyNodeFilter" : false,
      "threadcount" : "1"
    },
    "filter" : "worker-.*"
  },
  "nodesSelectedByDefault" : true,
  "options" : [ {
    "name" : "worker-id",
    "type" : "text",
    "value" : "abc"
  } ],
  "plugins" : {
    "ExecutionLifecycle" : null
  },
  "scheduleEnabled" : true,
  "schedules" : [ ],
  "sequence" : {
    "commands" : [ {
      "autoSecureInput" : "false",
      "description" : "Checking worker logs",
      "passSecureInput" : "false",
      "script" : "#!/bin/bash\n\nUUID=@option.worker-id@\nLOG_FILE=\"/home/ec2-user/worker/worker.log\"\nCOMPLETION_MESSAGE=\"Task completed successfully.\"\nERROR_MESSAGE=\"Simulating failure\"\n\n# debugging\necho \" -- Let's look for task id: $UUID --\"\n\n# Watch the log file for the completion message\ntail -f \"$LOG_FILE\" | while read LINE; do\n  echo \"Read line: $LINE\"  # Debugging output\n  if echo \"$LINE\" | grep -q \"$UUID\" && echo \"$LINE\" | grep -q \"$COMPLETION_MESSAGE\"; then\n    echo \"Worker $UUID - Task completed successfully.\"\n    pkill -P $ tail  # Stop the tail process\n\n    exit 0\n  elif echo \"$LINE\" | grep -q \"$UUID\" && echo \"$LINE\" | grep -q \"$ERROR_MESSAGE\"; then\n    echo \"Worker $UUID - Error detected: $ERROR_MESSAGE\"\n    pkill -P $ tail  # Stop the tail process\n    exit 1\n  fi\ndone"
    }, {
      "exec" : "cat /home/ec2-user/worker/worker_output.json"
    } ],
    "keepgoing" : false,
    "strategy" : "node-first"
  },
  "timeout" : "20s",
  "uuid" : "e5e8f2b6-d560-46f0-b0ff-6ae26b049a13"
} ]
