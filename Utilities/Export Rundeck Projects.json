[ {
  "defaultTab" : "nodes",
  "description" : "Retrieve the list of all Rundeck projects and export each project to a file.\n\nPerforms the export synchronously.\n\nPrerequisites for the job: Rundeck API token with appropriate permissions - requires `export` authorization for the project.",
  "executionEnabled" : true,
  "group" : "Utilities",
  "id" : "c11ac3a0-94da-4aad-840e-774cae8d3a85",
  "loglevel" : "INFO",
  "name" : "Export Rundeck Projects",
  "nodeFilterEditable" : false,
  "nodefilters" : {
    "dispatch" : {
      "excludePrecedence" : true,
      "keepgoing" : false,
      "rankOrder" : "ascending",
      "successOnEmptyNodeFilter" : false,
      "threadcount" : "1"
    },
    "filter" : ".*rundeckers-a"
  },
  "nodesSelectedByDefault" : true,
  "options" : [ {
    "hidden" : true,
    "label" : "Rundeck API Token",
    "name" : "rba-token",
    "required" : true,
    "secure" : true,
    "storagePath" : "keys/bdias-rba-token",
    "type" : "text",
    "valueExposed" : true
  }, {
    "label" : "Output Directory",
    "name" : "output_directory",
    "type" : "text",
    "value" : "/tmp/rundeck_backups"
  }, {
    "label" : "Rundeck Server",
    "name" : "rundeck_server",
    "type" : "text",
    "value" : "<enter-rundeck-cluster-hostname>"
  } ],
  "plugins" : {
    "ExecutionLifecycle" : null
  },
  "scheduleEnabled" : true,
  "schedules" : [ ],
  "sequence" : {
    "commands" : [ {
      "configuration" : {
        "authentication" : "None",
        "checkResponseCode" : "false",
        "headers" : "{\"X-Rundeck-Auth-Token\": \"${option.rba-token}\", \"Content-Type\": \"application/json\"}",
        "method" : "GET",
        "printResponse" : "true",
        "printResponseCode" : "false",
        "printResponseToFile" : "false",
        "proxySettings" : "false",
        "remoteUrl" : "https://${option.rundeck_server}/api/14/projects",
        "sslVerify" : "true",
        "timeout" : "30000"
      },
      "description" : "Retrieve the list of all Rundeck projects",
      "nodeStep" : false,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "captureMultipleKeysValues" : "false",
            "hideOutput" : "false",
            "logData" : "true",
            "name" : "project-list",
            "regex" : "(.*)"
          },
          "type" : "key-value-data-multilines"
        } ]
      },
      "type" : "edu.ohio.ais.rundeck.HttpWorkflowStepPlugin"
    }, {
      "autoSecureInput" : "false",
      "description" : "Export each project to an archive file",
      "fileExtension" : ".py",
      "interpreterArgsQuoted" : false,
      "passSecureInput" : "false",
      "script" : "import requests\nimport json\nimport os\n\n# JSON data (replace this with a file read if the data is stored in a file)\nprojects = @data.project-list@\n\n# Base API URL\nbase_api_url = \"https://@option.rundeck_server@/api/14/project\"\n\n# Directory to save the ZIP files\noutput_directory = \"@option.output_directory@\"\n\n# Ensure the output directory exists\nos.makedirs(output_directory, exist_ok=True)\n\nheaders = {\n  'Accept': 'application/yaml',\n  'X-Rundeck-Auth-Token': '@option.rba-token@',\n}\n\n# Function to make API calls\ndef export_project(project_name):\n    # Construct the API endpoint\n    api_endpoint = f\"{base_api_url}/{project_name}/export?exportAll=true&exportExecutions=false\"\n    try:\n        # Make the GET request\n        response = requests.get(api_endpoint, headers=headers, stream=True)\n        # Check if the request was successful\n        if response.status_code == 200:\n            # Define the output file path\n            output_file = os.path.join(output_directory, f\"{project_name}.zip\")\n            # Write the content to a file\n            with open(output_file, \"wb\") as file:\n                for chunk in response.iter_content(chunk_size=8192):\n                    file.write(chunk)\n            print(f\"Successfully exported project: {project_name}\")\n        else:\n            print(f\"Failed to export project: {project_name}. Status code: {response.status_code}\")\n    except Exception as e:\n        print(f\"Error exporting project {project_name}: {e}\")\n\nprint(\"Will start project backups!\")\n# print(f\"Project list: {projects}\")\n\n# Iterate over the projects and make API calls\nfor project in projects:\n    project_name = project[\"name\"]\n    # print(f\"Going to process project: {project_name}\")\n    export_project(project_name)",
      "scriptInterpreter" : "python -u"
    }, {
      "autoSecureInput" : "false",
      "description" : "Create an archive containing all exported project files",
      "fileExtension" : "sh",
      "interpreterArgsQuoted" : false,
      "passSecureInput" : "false",
      "script" : "tar -czf @option.output_directory@/rundeck_projects_archive.tar.gz @option.output_directory@/*",
      "scriptInterpreter" : "/bin/bash"
    } ],
    "keepgoing" : false,
    "strategy" : "node-first"
  },
  "tags" : "generated",
  "uuid" : "c11ac3a0-94da-4aad-840e-774cae8d3a85"
} ]
